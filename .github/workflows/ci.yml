name: AWS CDK CI/CD with Wiz Scanning and Deployment

on:
  push:
    branches: [main]

permissions: write-all

env:
  WIZ_CLIENT_ID: ${{ secrets.WIZ_CLIENT_ID }}
  WIZ_CLIENT_SECRET: ${{ secrets.WIZ_CLIENT_SECRET }}
  IAC_SCAN_PATH: "cdk.out" # Path to the codebase or IaC files
  DOCKER_SCAN_PATH: "./cdk/containers/dvpwa"
  POLICY: "Default IaC policy" # Default Wiz policy for IaC
  IMAGE_TAG: "cdk-goat:latest" # Tag for the Docker image
  DOCKER_SCAN_POLICY: "[Avishay] Custom vulnerabilities policy" # Default Wiz policy for Docker
  AWS_REGION: "us-east-1" # Adjust to your preferred AWS region

jobs:
  build:
    name: Build and Pre-Commit Checks
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Node.js and Python
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install Dependencies
        run: |
          sudo apt update && sudo apt install -y build-essential libpq-dev python3-dev postgresql graphviz
          npm install -g aws-cdk
          pip install poetry
          poetry install --no-interaction --no-root

      - name: Run Pre-commit Checks
        run: |
          poetry run pre-commit run -a

      - name: Run CDK Synth
        run: |
          poetry run cdk synth

      - name: Run Pytest for CDK
        run: |
          poetry run pytest -v

      - name: Download Wiz CLI
        run: curl -o wizcli https://downloads.wiz.io/wizcli/latest/wizcli-linux-amd64 && chmod +x wizcli

      - name: Authenticate to Wiz
        run: ./wizcli auth --id "$WIZ_CLIENT_ID" --secret "$WIZ_CLIENT_SECRET"

      - name: Run Wiz CLI IaC Scan
        run: ./wizcli iac scan --path $IAC_SCAN_PATH --policy "$POLICY"

      - name: Build Docker Image
        run: |
          cd $DOCKER_SCAN_PATH
          docker build -t $IMAGE_TAG .

      - name: Run Wiz CLI Docker Image Scan
        run: ./wizcli docker scan --image $IMAGE_TAG --policy "$DOCKER_SCAN_POLICY"
